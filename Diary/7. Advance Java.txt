Lecture 1
Date: 04/04/2025

Topics Discussed: 
- Web Application / Site
  - Development
    - Client side / Frontend
      - HTML / CSS / JS
      - React/Angular/...
      - JSP
    
    - Server side / Backend
      - Node.js
      - Servlet

  - Deployment
    - Server Machines
    - Cloud / Web hosting

  - Software
    - Web/HTTP Server
      - Nginx, Apache HTTP server, Microsoft IIS,...

    - Application Server
      - Apache Tomcat
      - JBoss, WebLogic, WebSphere, Glassfish,...

    - Database Software

    - Email Serve

    - FTP Server


Task:
Read about Servlet, JSP, Tomcat, 
Difference between Application and Web server
What is Java EE, Java SE, etc ?




**********************************************************************************
Lecture 2
Date: 08/04/2025

Topic discussed:
- Login Services using different ways


Tasks:
Implement LoginService from JDBC   




**********************************************************************************
Lecture 3
Date: 09/04/2025

Topic discussed:
- Cookies
- Encoding and Decoding using base64
- Session
- Static/Dynamic Captcha
- Intro to JSP


Tasks:
Use Encryption algorithm for password encryption
Try text to speech using java
Try blocking user after 3 failed attempts in login
Read about JSP (use case, importance, pros, cons, etc)




**********************************************************************************
Lecture 4
Date: 10/04/2025

Topic discussed:
- Internal working of jsp
- Quiz Web App 


Tasks:
How to achieve pre-compiled jsp since by default jsp is compiled on first request
Link: https://www.ibm.com/docs/en/was-nd/8.5.5?topic=files-jsp-run-time-compilation-settings

Implement remaining features in Quiz Web App




**********************************************************************************
Lecture 5
Date: 11/04/2025

Topic discussed:
- CRUD operation on database using web based interface


Tasks:
Architecture of servlet, tomcat
Internal working of PreparedStatement

What is a Servlet Container and how is it different from a Web Server?
Link: https://pathum-liyanagama.medium.com/java-servlet-container-vs-application-server-vs-web-server-7471f89402ac
      https://medium.com/@newbie42/what-is-web-container-application-server-and-web-server-83c537d8c50

What is Servlet interface. What is GenericServlet. What is HttpServlet?
Link: https://docs.oracle.com/javaee/7/api/index.html

What is ServletContext ?

What is the life cycle of a Servlet?

What is the role of web.xml file? 

What is load-on-startup in web.xml file?

What is the role of ServletException and IOException used in the signature of
         service/doGet/doPost method?

Why is Servlet better than conventional CGI?

What is SingleThreadModel interface?




**********************************************************************************
Lecture 6
Date: 14/04/2025

Topic discussed:
- web.xml
- Servlet life cycle
- Servlet Interface, GenericServlet class, HttpServlet class
- JspPage Interface
- Web container (Context/Sandbox)
- Session architecture
- MVC architecture

Tasks:
Deploy app using manager in Tomcat ✅

Check out http://localhost:8080/examples/ provided by Tomcat

Collect more info about Catalina, Jasper & Juli
Link: https://intojava.wordpress.com/2022/03/22/meet-tomcat-catalina/
      
TODO: In web.xml, try error-page tag and its page ✅
Link: https://stackoverflow.com/questions/7066192/how-to-specify-the-default-error-page-in-web-xml

Check about Java Bean in MVC architecture of java ✅
Link: https://stackoverflow.com/questions/3295496/what-is-a-javabean-exactly

Complete Servlet2.txt and JSP-Questions.txt




**********************************************************************************
Lecture 7
Date: 15/04/2025

Topic discussed:
- Get and Post method
- ServletException and IOException in signature of doGet and doPost
- Redirect and forward
- Data scopes
  - page scope, request scope, session scope, context/application scope
- getParameter vs getAttribute
- <%-- comments --%>, tag for commenting java code in jsp file.
- Filters
- Listeners
- Headers in HTTP
- Custom tags in JSP


Tasks:
Name and use of Different JSP tags
Versions of JSP and Servlet
try session listener
find more examples on different listener
check out JSTL and try to implement it




**********************************************************************************
Lecture 8
Date: 16/04/2025

Topic discussed:
- Apache Maven
  - Project Management Tool
  - Dependency (External) Management Tool
  - Build Tool (Provides conveniency in Compile, Run, Test, package[jar/war],...)

- compiling file from cmd and storing it in different directory
  PS C:\Users\miral.gudhka\eclipse-workspace\maven-demo> javac -d "target/classes" -cp "C:\Users\miral.gudhka\.m2\repository\com\itextpdf\itextpdf\5.5.13.4\itextpdf-5.5.13.4.jar" "src/main/java/com/training/PdfWriteExample.java"

- Running file from cmd
  PS C:\Users\miral.gudhka\eclipse-workspace\maven-demo> java -cp "target\classes;C:\Users\miral.gudhka\.m2\repository\com\itextpdf\itextpdf\5.5.13.4\itextpdf-5.5.13.4.jar" com.training.PdfWriteExample

- Compiling using maven in cmd
- Running class file using maven in cmd
- creating jar file using maven in cmd
- creating executable jar file using maven in cmd
- plugins in maven


Tasks:
Explore Features of Eclipse IDE
Explore SNAPSHOT versioning
Explore more about Maven and other topics apart from sir's teaching.




**********************************************************************************
Lecture 9
Date: 17/04/2025

Topic discussed:
- Testing
  - Developer Side Testing
    - Unit Testing
    - Integration Testing

- Junit
  - for testing java programs

- Git
  - Source Code Management tool


Tasks:
Explore more about QA/QC
Explore more examples on Junit, Junit tags
Try writing test case for sports scheduler
Explore Git vs SVN
Try git push and pull onto remote repository




**********************************************************************************
Lecture 10
Date: 22/04/2025

Topic discussed:
- git remote add origin https://...
- git push
- git pull
- git clone
- resolving conflicts
- branching in git
- git in eclipse

- Spring Framework
  - Creating objects
    - Option 1
      -> We need to create an xml file and configure the class whose object has to be created
    - Option 2
      -> We will use annotation instead of xml.

  - Managing dependencies between objects (DI)
    


Tasks:
Explore mocking testing
Explore Benefits of maven
Explore singleton design pattern
Explore various design patterns
Explore DI realistic examples
Explore Spring's DI feature




**********************************************************************************
Lecture 11
Date: 23/04/2025

Topic discussed:
- Loose & tight Coupling
- Spring and JDBC
- properties tag in maven's pom.xml
- Spring and Junit


Tasks:
Explore DI, IOC & Wiring (in detail)
Link: https://www.geeksforgeeks.org/spring-difference-between-inversion-of-control-and-dependency-injection/
      
Explore Benefits of DataSource (Connection Pooling feature in detail)




**********************************************************************************
Lecture 12
Date: 24/04/2025

Topic discussed:
- Analyzing performance of DriveManager for connecting to database.
- Analyzing performance of DataSource(Connection Pooling) for connecting to database.
- JDBC Template to reduce code
- Hibernate ORM
- Spring and Hibernate
- Creating Relationship between tables using hibernate


Tasks:
Analyze the performance of statement and preparedStatement.
Link: https://www.theserverside.com/news/1365244/Why-Prepared-Statements-are-important-and-how-to-use-them-properly

Check out this link: https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing ✅

Implement using BeanPropertyRowMapper, what if Product class has different field name than column name in db. ✅
Link: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jdbc/core/BeanPropertyRowMapper.html

Practice Spring with hibernate on weekend

Try 1-M, M-M in hibernate




**********************************************************************************
Lecture 13
Date: 28/04/2025

Topic discussed:
- IOC, DI & Wiring
- Cascading Effect in Hibernate ORM
- HQL/JPQL
- Spring Data
- Spring MVC
- Spring MVC + Hibernate



Tasks:
how to write pre-compiled query in MySQL

Check out this link: https://martinfowler.com/articles/injection.html

Practice HQL/JPQL on your custom Hibernate ORM

Implement Edit and Delete functionality in spring-mvc

Check out benefits of Spring MVC

Check about Spring MVC Architecture
Link: https://medium.com/@kulkarniprabhakar2000/spring-mvc-a-comprehensive-guide-part-1-23c367520ac9
      https://www.geeksforgeeks.org/spring-mvc-framework/




**********************************************************************************
Lecture 14
Date: 29/04/2025

Topic discussed:
- Redirecting in spring
- REST API in Spring
- Spring and Angular integration


Tasks:
Try methods of Optional API
PathParam vs RequestParam
Investigate about DTO (Data Transfer Object)




**********************************************************************************
Lecture 15
Date: 30/04/2025

Topic discussed:
- Spring Framework
  - Creating Objects
    - Option 3
      --> Remove xml style configuration and replace it with java style configuration

- Spring Boot Intro



Tasks:
check if we can write existsByEmail in CustomerRepository.java
Implement EmailService class (details in CustomerService class)
Check about further configuration/setting in @Transactional annotation




**********************************************************************************
Lecture 16
Date: 02/04/2025

Topic discussed:
- Implemented OrderService in spring-boot-intro
- Java based configuration in spring-intro
- Reading property values from app.properties in spring-intro
- Dev, QA & Prod environments
- Aspect Oriented Programming (AOP) in spring


Tasks:
Check about further configuration/setting in @Transactional annotation
